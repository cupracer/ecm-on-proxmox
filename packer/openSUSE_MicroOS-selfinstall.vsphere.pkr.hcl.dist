packer {
  required_plugins {
    vsphere = {
      version = ">= 1.1.1"
      source  = "github.com/hashicorp/vsphere"
    }
  }
}

source "vsphere-iso" "microos" {
  CPUs                 = var.cpus
  RAM                  = var.memory_g * 1024
  boot_command         = ["<home>", "<down>", "<enter>", "<wait20>", "<enter>", ]
  boot_wait            = "10s"
  cluster              = var.cluster
  convert_to_template  = "true"
  datacenter           = var.datacenter
  datastore            = var.datastore
  disk_controller_type = ["pvscsi"]
  firmware             = "bios"
  folder               = var.folder
  guest_os_type        = "sles15_64Guest"
  insecure_connection  = "true"
  iso_checksum         = var.iso_checksum
  iso_paths            = [var.iso_file]
  network_adapters {
    network      = var.network
    network_card = "vmxnet3"
  }
  password             = var.vcenter_password
  remove_cdrom         = true
  resource_pool        = var.resource_pool
  shutdown_command     = "shutdown -P now"
  ssh_private_key_file = "./ssh_files/packer"
  ssh_username         = "root"
#  ssh_clear_authorized_keys = true
  storage {
    disk_size             = var.disk_size_g * 1024
    disk_thin_provisioned = true
  }
  username       = var.vcenter_username
  vcenter_server = var.vcenter_server
  vm_name        = var.name
  vm_version     = 15

  cd_files = ["./combustion"]
  cd_label = "combustion"
}

build {
  sources = ["source.vsphere-iso.microos"]

  provisioner "shell" {
    inline = [
      "echo 'Remove authorized_keys' && rm -vf /root/.ssh/authorized_keys"
    ]
  }
}

variable "cpus" {
  type    = number
  default = 1
}

variable "cluster" {
  type = string
}

variable "datacenter" {
  type = string
}

variable "datastore" {
  type = string
}

variable "folder" {
  type = string
}

variable "network" {
  type = string
}

variable "vcenter_password" {
  type = string
}

variable "resource_pool" {
  type = string
}

variable "vcenter_server" {
  type = string
}

variable "vcenter_username" {
  type = string
}

variable "name" {
  type = string
}

